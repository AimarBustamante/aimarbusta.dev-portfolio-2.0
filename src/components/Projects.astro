---
import { skills } from "../data/skills.ts";
import { projects } from "../data/projects.ts";
import GitHubIcon from "../components/icons/GitHub.astro";
import Link from "../components/icons/Link.astro";
import SocialPill from "./SocialPill.astro";

import { getI18N } from "../i18n";
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

// Extraer solo las traducciones necesarias para la sección de habilidades
const translations = {
	"Skills.languages": i18n.Skills.languages,
	"Skills.frameworks": i18n.Skills.frameworks,
	"Skills.no-code": i18n.Skills["no-code"],
	"Skills.design": i18n.Skills.design,
	"Skills.others": i18n.Skills.others,
};

const translatedSkills = skills(translations);

// Definir tipos explícitos para skillMap
const skillMap: { [key: string]: string } = {};

// Poblar skillMap con los nombres y colores de translatedSkills
Object.values(translatedSkills).forEach((skillCategory) => {
	skillCategory.forEach((skill) => {
		skillMap[skill.name] = skill.color;
	});
});

// Función de ayuda para obtener traducciones seguras
function getTranslation(key: string): string {
	return (i18n.Projects as Record<string, string>)[key];
}
---

<div class="grid gap-6">
	{
		projects.map(
			({ title, description, tag, image, github, link }, index) => (
				<article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0 mb-9">
					<div class="w-full md:w-1/2">
						<div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:shadow-2xl lg:border lg:border-gray-800 border-gray-700 ">
							<img
								class="object-cover object-top w-full h-56 sm:h-full md:scale-110"
								src={image}
								alt={`Captura de pantalla del proyecto ${title}`}
							/>
						</div>
					</div>

					<div class="w-full md:w-1/2 md:max-w-lg">
						<h2 class="text-2xl font-bold text-gray-100">
							{getTranslation(`project-${index + 1}`)}
						</h2>
						<div class="flex flex-wrap mt-2">
							<ul class="flex flex-row my-2 gap-x-2">
								{tag.map((tag) => (
									<li
										style={`background-color: ${skillMap[tag] || "#000"}`}
										class="py-1 px-2 text-xs rounded text-white text-center justify-center"
									>
										{tag}
									</li>
								))}
							</ul>
							<div class="mt-2 text-gray-400 text-pretty">
								{getTranslation(`description-${index + 1}`)}
							</div>
							<footer class="flex items-end justify-start mt-4 gap-x-4">
								<SocialPill href={github}>
									<GitHubIcon class="size-4 md:size-6" />{" "}
									{getTranslation("code-button")}
								</SocialPill>
								<SocialPill href={link}>
									<Link class="size-4 md:size-6" /> Preview
								</SocialPill>
							</footer>
						</div>
					</div>
				</article>
			)
		)
	}

	<h3 class="text-2xl font-bold text-gray-100">
		{i18n.Projects["contact-button"]}
	</h3>
	<button
		class="w-32 bg-blue-600 text-white text-sm font-medium py-2.5 rounded-lg focus:ring-4 focus:ring-blue-500 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-700"
		onclick={`window.location.href='${currentLocale === "en" ? "/en/contact/" : "/contact/"}'`}
		>{currentLocale === 'en' ? 'Contact Me' : 'Contáctame'}</button
	>
</div>

---
import Layout from "../layouts/Layout.astro";
import SectionContainer from "../components/SectionContainer.astro";

import { getI18N } from "../i18n";
import BackIcon from "./icons/BackIcon.astro";
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const homeUrl = currentLocale === "en" ? "/en/" : "/";
---

<Layout
	title={i18n.Contact["page-title"]}
	description={i18n.Contact["page-description"]}
	showNavbar={false}
	showFooter={false}
>
	<main>
		<SectionContainer class="py-32">
			<!-- Botón de regreso -->
			<button
				type="button"
				class="flex gap-1 items-center justify-center text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-6 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800"
				onclick={`window.location.href='${homeUrl}'`}
			>
				<BackIcon />
				{i18n.Contact["back-button"]}
			</button>

			<h2 class="text-4xl font-semibold mb-6 text-gray-100">
				{i18n.Contact.title}
			</h2>

			<!-- Resto del contenido del formulario -->
			<form
				class="w-full mx-auto"
				id="contactForm"
				name="contactForm"
				novalidate
				method="POST"
				data-netlify="true"
			>
				<!-- Nombre -->
				<div class="mb-5">
					<label
						for="name"
						class="block mb-2 text-sm font-medium text-white"
						>{i18n.Contact["name-label"]}</label
					>
					<input
						type="text"
						id="name"
						name="name"
						required
						class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
						placeholder={i18n.Contact["name-placeholder"]}
					/>
					<p id="name-error" class="hidden mt-2 text-sm text-red-500">
						{i18n.Contact["name-error"]}
					</p>
					<p
						id="name-success"
						class="hidden mt-2 text-sm text-green-500"
					>
						{i18n.Contact["name-success"]}
					</p>
				</div>

				<!-- Correo -->
				<div class="mb-5">
					<label
						for="email"
						class="block mb-2 text-sm font-medium text-white"
						>{i18n.Contact["email-label"]}</label
					>
					<input
						type="email"
						id="email"
						name="email"
						required
						aria-describedby="helper-text-explanation"
						class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
						placeholder={i18n.Contact["email-placeholder"]}
					/>
					<p
						id="email-error"
						class="hidden mt-2 text-sm text-red-500"
					>
						{i18n.Contact["email-error"]}
					</p>
					<p
						id="email-success"
						class="hidden mt-2 text-sm text-green-500"
					>
						{i18n.Contact["email-success"]}
					</p>
				</div>

				<!-- Mensaje -->
				<div class="mb-5">
					<label
						for="message"
						class="block mb-2 text-sm font-medium text-white"
						>{i18n.Contact["message-label"]}</label
					>
					<textarea
						id="message"
						name="message"
						rows="4"
						required
						class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
						placeholder={i18n.Contact["message-placeholder"]}
					></textarea>
					<p
						id="message-error"
						class="hidden mt-2 text-sm text-red-600 dark:text-red-500"
					>
						{i18n.Contact["message-error"]}
					</p>
					<p
						id="message-success"
						class="hidden mt-2 text-sm text-green-600 dark:text-green-500"
					>
						{i18n.Contact["message-success"]}
					</p>
				</div>

				<!-- Botón de envío -->
				<button
					type="submit"
					class="mt-4 w-32 bg-blue-600 text-white text-sm font-medium py-2.5 rounded-lg focus:ring-4 focus:ring-blue-500 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-700"
				>
					{i18n.Contact["submit-button"]}
				</button>
			</form>

			<!-- Script para validación del formulario -->
			<script is:inline>
				document.addEventListener("DOMContentLoaded", () => {
					const contactForm = document.getElementById("contactForm");
					if (contactForm) {
						const name = document.getElementById("name");
						const email = document.getElementById("email");
						const message = document.getElementById("message");

						name.addEventListener("input", () =>
							validateInput(name, "name")
						);
						email.addEventListener("input", () =>
							validateInput(email, "email")
						);
						message.addEventListener("input", () =>
							validateInput(message, "message")
						);

						contactForm.addEventListener(
							"submit",
							function (event) {
								event.preventDefault();
								let hasError = false;

								// Validar todos los campos al enviar
								hasError |= !validateInput(name, "name");
								hasError |= !validateInput(email, "email");
								hasError |= !validateInput(message, "message");

								if (!hasError) {
									contactForm.submit();
								}
							}
						);
					}

					function validateInput(input, type) {
						let isValid = false;
						if (type === "name") {
							isValid = input.value.trim() !== "";
						} else if (type === "email") {
							const emailPattern =
								/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
							isValid = emailPattern.test(input.value);
						} else if (type === "message") {
							isValid = input.value.trim() !== "";
						}

						const errorEl = document.getElementById(
							`${type}-error`
						);
						const successEl = document.getElementById(
							`${type}-success`
						);
						if (isValid) {
							input.classList.remove(
								"border-red-500",
								"bg-red-50"
							);
							input.classList.add(
								"border-green-500",
								"bg-green-50"
							);
							errorEl.classList.add("hidden");
							successEl.classList.remove("hidden");
						} else {
							input.classList.add("border-red-500", "bg-red-50");
							input.classList.remove(
								"border-green-500",
								"bg-green-50"
							);
							errorEl.classList.remove("hidden");
							successEl.classList.add("hidden");
						}
						return isValid;
					}
				});
			</script>
		</SectionContainer>
	</main>
</Layout>
